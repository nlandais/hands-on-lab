 # -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

require './vars.rb'
include MyVars
KEY = File.basename(KEYPATH, ".pem")

Vagrant.configure(2) do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://atlas.hashicorp.com/search.
  config.vm.box = "dummy"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider :aws do |aws, override|
    aws.user_data = "#!/bin/bash\nsed -i -e 's/^Defaults.*requiretty/# Defaults requiretty/g' /etc/sudoers"
    aws.access_key_id = ACCESSKEYID
    aws.secret_access_key = SECRETACCESSKEY
    aws.associate_public_ip = true
    aws.keypair_name = KEY
    aws.security_groups= SG
    aws.subnet_id = SUBNET_ID
    aws.ami = "ami-6869aa05"
    aws.region = "us-east-1"
    override.ssh.username = "ec2-user"
    override.ssh.private_key_path = KEYPATH
    aws.instance_type = "m3.medium"
    aws.tags = {
      'Name' => INSTANCE_NAME
    }
  end
  ENV["VAGRANT_DETECTED_OS"] = ENV["VAGRANT_DETECTED_OS"].to_s + " cygwin"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder PLAYBOOKSPATH, "#{HOME_DIRECTORY}/ansible", type: "rsync", rsync__exclude: [".git/", "group_vars/", "library/", "log/"]

  # View the documentation for the provider you are using for more
  # information on available options.

  # Enable provisioning with a shell script. Additional provisioners such as
  # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell" do |s|
      s.path = "ansible.sh"
      s.args = "#{ACCESSKEYID} #{SECRETACCESSKEY} '#{ANSIBLE_USER_PASSWD}'"
      s.privileged = false
  end
end
